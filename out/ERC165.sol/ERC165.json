{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink/contracts/src/v0.6/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/libraries/introspection/ERC165.sol\":{\"keccak256\":\"0xd1704886041d3428878b807c25adb0bd0f0a296237825f48be8dbf96c7673856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df2a9951f6846f6858e527f83115ebe5ee0fb4ee1bafa3f812b25b06f49a7aa3\",\"dweb:/ipfs/QmZndB2CwtCf1q1iNpEHqkWTEm57uNrFwWmTk3QJShS2mg\"]},\"src/libraries/introspection/IERC165.sol\":{\"keccak256\":\"0xd9760e4c13b3852c7bde19010b0a975bf3a574474c02494d756625956d09ed13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5041799d0639b78d8a6b870e3d8ef618e240aa304f9e88e9e627b17f3767b236\",\"dweb:/ipfs/QmSQdocuTpdhMMivsF1P9w6qWz6pRnfDnZpnGUkLNmvngC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink/contracts/src/v0.6/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/introspection/ERC165.sol":"ERC165"},"libraries":{}},"sources":{"src/libraries/introspection/ERC165.sol":{"keccak256":"0xd1704886041d3428878b807c25adb0bd0f0a296237825f48be8dbf96c7673856","urls":["bzz-raw://df2a9951f6846f6858e527f83115ebe5ee0fb4ee1bafa3f812b25b06f49a7aa3","dweb:/ipfs/QmZndB2CwtCf1q1iNpEHqkWTEm57uNrFwWmTk3QJShS2mg"],"license":"MIT"},"src/libraries/introspection/IERC165.sol":{"keccak256":"0xd9760e4c13b3852c7bde19010b0a975bf3a574474c02494d756625956d09ed13","urls":["bzz-raw://5041799d0639b78d8a6b870e3d8ef618e240aa304f9e88e9e627b17f3767b236","dweb:/ipfs/QmSQdocuTpdhMMivsF1P9w6qWz6pRnfDnZpnGUkLNmvngC"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/libraries/introspection/ERC165.sol","id":53096,"exportedSymbols":{"ERC165":[53095],"IERC165":[53107]},"nodeType":"SourceUnit","src":"99:796:66","nodes":[{"id":53073,"nodeType":"PragmaDirective","src":"99:23:66","nodes":[],"literals":["solidity","0.8",".18"]},{"id":53075,"nodeType":"ImportDirective","src":"124:38:66","nodes":[],"absolutePath":"src/libraries/introspection/IERC165.sol","file":"./IERC165.sol","nameLocation":"-1:-1:-1","scope":53096,"sourceUnit":53108,"symbolAliases":[{"foreign":{"id":53074,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53107,"src":"132:7:66","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":53095,"nodeType":"ContractDefinition","src":"643:251:66","nodes":[{"id":53094,"nodeType":"FunctionDefinition","src":"746:146:66","nodes":[],"body":{"id":53093,"nodeType":"Block","src":"828:64:66","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":53091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53086,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53081,"src":"845:11:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":53088,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53107,"src":"865:7:66","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$53107_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$53107_$","typeString":"type(contract IERC165)"}],"id":53087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"860:4:66","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"860:13:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$53107","typeString":"type(contract IERC165)"}},"id":53090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"874:11:66","memberName":"interfaceId","nodeType":"MemberAccess","src":"860:25:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"845:40:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":53085,"id":53092,"nodeType":"Return","src":"838:47:66"}]},"baseFunctions":[53106],"documentation":{"id":53079,"nodeType":"StructuredDocumentation","src":"685:56:66","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"755:17:66","parameters":{"id":53082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53081,"mutability":"mutable","name":"interfaceId","nameLocation":"780:11:66","nodeType":"VariableDeclaration","scope":53094,"src":"773:18:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":53080,"name":"bytes4","nodeType":"ElementaryTypeName","src":"773:6:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"772:20:66"},"returnParameters":{"id":53085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":53094,"src":"822:4:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":53083,"name":"bool","nodeType":"ElementaryTypeName","src":"822:4:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"821:6:66"},"scope":53095,"stateMutability":"view","virtual":true,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":53077,"name":"IERC165","nameLocations":["671:7:66"],"nodeType":"IdentifierPath","referencedDeclaration":53107,"src":"671:7:66"},"id":53078,"nodeType":"InheritanceSpecifier","src":"671:7:66"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":53076,"nodeType":"StructuredDocumentation","src":"164:478:66","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"linearizedBaseContracts":[53095,53107],"name":"ERC165","nameLocation":"661:6:66","scope":53096,"usedErrors":[]}],"license":"MIT"},"id":66}