{"abi":[{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink/contracts/src/v0.6/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/libraries/introspection/IERC165.sol\":{\"keccak256\":\"0xd9760e4c13b3852c7bde19010b0a975bf3a574474c02494d756625956d09ed13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5041799d0639b78d8a6b870e3d8ef618e240aa304f9e88e9e627b17f3767b236\",\"dweb:/ipfs/QmSQdocuTpdhMMivsF1P9w6qWz6pRnfDnZpnGUkLNmvngC\"]},\"src/libraries/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0ba713634783bfce36f1dca375180ba9a27b506571e826e69b6359c0900e5cbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d385e02df90805d89453c5245d5d58c6edf66f1a2a2d030a5a56631c1b1ead\",\"dweb:/ipfs/QmSX4LXpoWQmE5he7JEjTmNvt7C9okjjyjuV6RKExyKbo2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"approved","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink/contracts/src/v0.6/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/token/ERC721/IERC721.sol":"IERC721"},"libraries":{}},"sources":{"src/libraries/introspection/IERC165.sol":{"keccak256":"0xd9760e4c13b3852c7bde19010b0a975bf3a574474c02494d756625956d09ed13","urls":["bzz-raw://5041799d0639b78d8a6b870e3d8ef618e240aa304f9e88e9e627b17f3767b236","dweb:/ipfs/QmSQdocuTpdhMMivsF1P9w6qWz6pRnfDnZpnGUkLNmvngC"],"license":"MIT"},"src/libraries/token/ERC721/IERC721.sol":{"keccak256":"0x0ba713634783bfce36f1dca375180ba9a27b506571e826e69b6359c0900e5cbb","urls":["bzz-raw://26d385e02df90805d89453c5245d5d58c6edf66f1a2a2d030a5a56631c1b1ead","dweb:/ipfs/QmSX4LXpoWQmE5he7JEjTmNvt7C9okjjyjuV6RKExyKbo2"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/libraries/token/ERC721/IERC721.sol","id":55962,"exportedSymbols":{"IERC165":[53107],"IERC721":[55961]},"nodeType":"SourceUnit","src":"108:4778:72","nodes":[{"id":55846,"nodeType":"PragmaDirective","src":"108:23:72","nodes":[],"literals":["solidity","0.8",".18"]},{"id":55848,"nodeType":"ImportDirective","src":"133:56:72","nodes":[],"absolutePath":"src/libraries/introspection/IERC165.sol","file":"../../introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":55962,"sourceUnit":53108,"symbolAliases":[{"foreign":{"id":55847,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53107,"src":"141:7:72","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":55961,"nodeType":"ContractDefinition","src":"259:4626:72","nodes":[{"id":55860,"nodeType":"EventDefinition","src":"387:82:72","nodes":[],"anonymous":false,"documentation":{"id":55852,"nodeType":"StructuredDocumentation","src":"294:88:72","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","name":"Transfer","nameLocation":"393:8:72","parameters":{"id":55859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55854,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"418:4:72","nodeType":"VariableDeclaration","scope":55860,"src":"402:20:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55853,"name":"address","nodeType":"ElementaryTypeName","src":"402:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55856,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"440:2:72","nodeType":"VariableDeclaration","scope":55860,"src":"424:18:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55855,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55858,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"460:7:72","nodeType":"VariableDeclaration","scope":55860,"src":"444:23:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55857,"name":"uint256","nodeType":"ElementaryTypeName","src":"444:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"401:67:72"}},{"id":55869,"nodeType":"EventDefinition","src":"574:89:72","nodes":[],"anonymous":false,"documentation":{"id":55861,"nodeType":"StructuredDocumentation","src":"475:94:72","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","name":"Approval","nameLocation":"580:8:72","parameters":{"id":55868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55863,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"605:5:72","nodeType":"VariableDeclaration","scope":55869,"src":"589:21:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55862,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55865,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"628:8:72","nodeType":"VariableDeclaration","scope":55869,"src":"612:24:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55864,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55867,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"654:7:72","nodeType":"VariableDeclaration","scope":55869,"src":"638:23:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55866,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"588:74:72"}},{"id":55878,"nodeType":"EventDefinition","src":"791:85:72","nodes":[],"anonymous":false,"documentation":{"id":55870,"nodeType":"StructuredDocumentation","src":"669:117:72","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","name":"ApprovalForAll","nameLocation":"797:14:72","parameters":{"id":55877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55872,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"828:5:72","nodeType":"VariableDeclaration","scope":55878,"src":"812:21:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55871,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55874,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"851:8:72","nodeType":"VariableDeclaration","scope":55878,"src":"835:24:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55873,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55876,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"866:8:72","nodeType":"VariableDeclaration","scope":55878,"src":"861:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55875,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"811:64:72"}},{"id":55886,"nodeType":"FunctionDefinition","src":"963:74:72","nodes":[],"documentation":{"id":55879,"nodeType":"StructuredDocumentation","src":"882:76:72","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"972:9:72","parameters":{"id":55882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55881,"mutability":"mutable","name":"owner","nameLocation":"990:5:72","nodeType":"VariableDeclaration","scope":55886,"src":"982:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55880,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"981:15:72"},"returnParameters":{"id":55885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55884,"mutability":"mutable","name":"balance","nameLocation":"1028:7:72","nodeType":"VariableDeclaration","scope":55886,"src":"1020:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1020:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1019:17:72"},"scope":55961,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55894,"nodeType":"FunctionDefinition","src":"1179:72:72","nodes":[],"documentation":{"id":55887,"nodeType":"StructuredDocumentation","src":"1043:131:72","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1188:7:72","parameters":{"id":55890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55889,"mutability":"mutable","name":"tokenId","nameLocation":"1204:7:72","nodeType":"VariableDeclaration","scope":55894,"src":"1196:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1195:17:72"},"returnParameters":{"id":55893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55892,"mutability":"mutable","name":"owner","nameLocation":"1244:5:72","nodeType":"VariableDeclaration","scope":55894,"src":"1236:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55891,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1235:15:72"},"scope":55961,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55906,"nodeType":"FunctionDefinition","src":"1818:99:72","nodes":[],"documentation":{"id":55895,"nodeType":"StructuredDocumentation","src":"1257:556:72","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1827:16:72","parameters":{"id":55904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55897,"mutability":"mutable","name":"from","nameLocation":"1852:4:72","nodeType":"VariableDeclaration","scope":55906,"src":"1844:12:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55896,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55899,"mutability":"mutable","name":"to","nameLocation":"1866:2:72","nodeType":"VariableDeclaration","scope":55906,"src":"1858:10:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55898,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55901,"mutability":"mutable","name":"tokenId","nameLocation":"1878:7:72","nodeType":"VariableDeclaration","scope":55906,"src":"1870:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":55903,"mutability":"mutable","name":"data","nameLocation":"1902:4:72","nodeType":"VariableDeclaration","scope":55906,"src":"1887:19:72","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":55902,"name":"bytes","nodeType":"ElementaryTypeName","src":"1887:5:72","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1843:64:72"},"returnParameters":{"id":55905,"nodeType":"ParameterList","parameters":[],"src":"1916:0:72"},"scope":55961,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55916,"nodeType":"FunctionDefinition","src":"2615:78:72","nodes":[],"documentation":{"id":55907,"nodeType":"StructuredDocumentation","src":"1923:687:72","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2624:16:72","parameters":{"id":55914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55909,"mutability":"mutable","name":"from","nameLocation":"2649:4:72","nodeType":"VariableDeclaration","scope":55916,"src":"2641:12:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55908,"name":"address","nodeType":"ElementaryTypeName","src":"2641:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55911,"mutability":"mutable","name":"to","nameLocation":"2663:2:72","nodeType":"VariableDeclaration","scope":55916,"src":"2655:10:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55910,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55913,"mutability":"mutable","name":"tokenId","nameLocation":"2675:7:72","nodeType":"VariableDeclaration","scope":55916,"src":"2667:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2640:43:72"},"returnParameters":{"id":55915,"nodeType":"ParameterList","parameters":[],"src":"2692:0:72"},"scope":55961,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55926,"nodeType":"FunctionDefinition","src":"3436:74:72","nodes":[],"documentation":{"id":55917,"nodeType":"StructuredDocumentation","src":"2699:732:72","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3445:12:72","parameters":{"id":55924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55919,"mutability":"mutable","name":"from","nameLocation":"3466:4:72","nodeType":"VariableDeclaration","scope":55926,"src":"3458:12:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55918,"name":"address","nodeType":"ElementaryTypeName","src":"3458:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55921,"mutability":"mutable","name":"to","nameLocation":"3480:2:72","nodeType":"VariableDeclaration","scope":55926,"src":"3472:10:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55920,"name":"address","nodeType":"ElementaryTypeName","src":"3472:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55923,"mutability":"mutable","name":"tokenId","nameLocation":"3492:7:72","nodeType":"VariableDeclaration","scope":55926,"src":"3484:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3484:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3457:43:72"},"returnParameters":{"id":55925,"nodeType":"ParameterList","parameters":[],"src":"3509:0:72"},"scope":55961,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55934,"nodeType":"FunctionDefinition","src":"3973:55:72","nodes":[],"documentation":{"id":55927,"nodeType":"StructuredDocumentation","src":"3516:452:72","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3982:7:72","parameters":{"id":55932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55929,"mutability":"mutable","name":"to","nameLocation":"3998:2:72","nodeType":"VariableDeclaration","scope":55934,"src":"3990:10:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55928,"name":"address","nodeType":"ElementaryTypeName","src":"3990:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55931,"mutability":"mutable","name":"tokenId","nameLocation":"4010:7:72","nodeType":"VariableDeclaration","scope":55934,"src":"4002:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4002:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3989:29:72"},"returnParameters":{"id":55933,"nodeType":"ParameterList","parameters":[],"src":"4027:0:72"},"scope":55961,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55942,"nodeType":"FunctionDefinition","src":"4348:69:72","nodes":[],"documentation":{"id":55935,"nodeType":"StructuredDocumentation","src":"4034:309:72","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4357:17:72","parameters":{"id":55940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55937,"mutability":"mutable","name":"operator","nameLocation":"4383:8:72","nodeType":"VariableDeclaration","scope":55942,"src":"4375:16:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55936,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55939,"mutability":"mutable","name":"approved","nameLocation":"4398:8:72","nodeType":"VariableDeclaration","scope":55942,"src":"4393:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55938,"name":"bool","nodeType":"ElementaryTypeName","src":"4393:4:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4374:33:72"},"returnParameters":{"id":55941,"nodeType":"ParameterList","parameters":[],"src":"4416:0:72"},"scope":55961,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55950,"nodeType":"FunctionDefinition","src":"4567:79:72","nodes":[],"documentation":{"id":55943,"nodeType":"StructuredDocumentation","src":"4423:139:72","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4576:11:72","parameters":{"id":55946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55945,"mutability":"mutable","name":"tokenId","nameLocation":"4596:7:72","nodeType":"VariableDeclaration","scope":55950,"src":"4588:15:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4588:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4587:17:72"},"returnParameters":{"id":55949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55948,"mutability":"mutable","name":"operator","nameLocation":"4636:8:72","nodeType":"VariableDeclaration","scope":55950,"src":"4628:16:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55947,"name":"address","nodeType":"ElementaryTypeName","src":"4628:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4627:18:72"},"scope":55961,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55960,"nodeType":"FunctionDefinition","src":"4795:88:72","nodes":[],"documentation":{"id":55951,"nodeType":"StructuredDocumentation","src":"4652:138:72","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4804:16:72","parameters":{"id":55956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55953,"mutability":"mutable","name":"owner","nameLocation":"4829:5:72","nodeType":"VariableDeclaration","scope":55960,"src":"4821:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55952,"name":"address","nodeType":"ElementaryTypeName","src":"4821:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55955,"mutability":"mutable","name":"operator","nameLocation":"4844:8:72","nodeType":"VariableDeclaration","scope":55960,"src":"4836:16:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55954,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4820:33:72"},"returnParameters":{"id":55959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55960,"src":"4877:4:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55957,"name":"bool","nodeType":"ElementaryTypeName","src":"4877:4:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4876:6:72"},"scope":55961,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":55850,"name":"IERC165","nameLocations":["280:7:72"],"nodeType":"IdentifierPath","referencedDeclaration":53107,"src":"280:7:72"},"id":55851,"nodeType":"InheritanceSpecifier","src":"280:7:72"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":55849,"nodeType":"StructuredDocumentation","src":"191:67:72","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"linearizedBaseContracts":[55961,53107],"name":"IERC721","nameLocation":"269:7:72","scope":55962,"usedErrors":[]}],"license":"MIT"},"id":72}