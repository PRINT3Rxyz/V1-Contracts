{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink/contracts/src/v0.6/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/libraries/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0b32fc187badba8280bd857d5b9cc8cf86d73059296d72aa90be87b5b59dd934\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c4bef445029105b1e9efaabf41f4bd33ba60488c275577bf2c77166ec862739\",\"dweb:/ipfs/QmZjutFoYkFpKGVUdX5o7LnYPHubru5Ufz6abs5Dw32MYb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink/contracts/src/v0.6/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"libraries":{}},"sources":{"src/libraries/utils/ReentrancyGuard.sol":{"keccak256":"0x0b32fc187badba8280bd857d5b9cc8cf86d73059296d72aa90be87b5b59dd934","urls":["bzz-raw://8c4bef445029105b1e9efaabf41f4bd33ba60488c275577bf2c77166ec862739","dweb:/ipfs/QmZjutFoYkFpKGVUdX5o7LnYPHubru5Ufz6abs5Dw32MYb"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/libraries/utils/ReentrancyGuard.sol","id":58851,"exportedSymbols":{"ReentrancyGuard":[58850]},"nodeType":"SourceUnit","src":"112:3138:84","nodes":[{"id":58783,"nodeType":"PragmaDirective","src":"112:23:84","nodes":[],"literals":["solidity","0.8",".18"]},{"id":58850,"nodeType":"ContractDefinition","src":"888:2361:84","nodes":[{"id":58787,"nodeType":"VariableDeclaration","src":"1676:41:84","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:84","scope":58850,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":58786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:84","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":58790,"nodeType":"VariableDeclaration","src":"1723:37:84","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:84","scope":58850,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":58789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:84","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":58792,"nodeType":"VariableDeclaration","src":"1767:23:84","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1783:7:84","scope":58850,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":58795,"nodeType":"ErrorDefinition","src":"1854:37:84","nodes":[],"documentation":{"id":58793,"nodeType":"StructuredDocumentation","src":"1797:52:84","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1860:28:84","parameters":{"id":58794,"nodeType":"ParameterList","parameters":[],"src":"1888:2:84"}},{"id":58803,"nodeType":"FunctionDefinition","src":"1897:53:84","nodes":[],"body":{"id":58802,"nodeType":"Block","src":"1911:39:84","nodes":[],"statements":[{"expression":{"id":58800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":58798,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58792,"src":"1921:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58799,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58787,"src":"1931:12:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1921:22:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":58801,"nodeType":"ExpressionStatement","src":"1921:22:84"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":58796,"nodeType":"ParameterList","parameters":[],"src":"1908:2:84"},"returnParameters":{"id":58797,"nodeType":"ParameterList","parameters":[],"src":"1911:0:84"},"scope":58850,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":58814,"nodeType":"ModifierDefinition","src":"2327:103:84","nodes":[],"body":{"id":58813,"nodeType":"Block","src":"2351:79:84","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":58806,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58830,"src":"2361:19:84","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":58807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2361:21:84","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58808,"nodeType":"ExpressionStatement","src":"2361:21:84"},{"id":58809,"nodeType":"PlaceholderStatement","src":"2392:1:84"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":58810,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58838,"src":"2403:18:84","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":58811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:20:84","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58812,"nodeType":"ExpressionStatement","src":"2403:20:84"}]},"documentation":{"id":58804,"nodeType":"StructuredDocumentation","src":"1956:366:84","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2336:12:84","parameters":{"id":58805,"nodeType":"ParameterList","parameters":[],"src":"2348:2:84"},"virtual":false,"visibility":"internal"},{"id":58830,"nodeType":"FunctionDefinition","src":"2436:310:84","nodes":[],"body":{"id":58829,"nodeType":"Block","src":"2475:271:84","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58817,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58792,"src":"2564:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":58818,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58790,"src":"2575:8:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2564:19:84","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":58824,"nodeType":"IfStatement","src":"2560:87:84","trueBody":{"id":58823,"nodeType":"Block","src":"2585:62:84","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":58820,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58795,"src":"2606:28:84","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":58821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:30:84","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58822,"nodeType":"RevertStatement","src":"2599:37:84"}]}},{"expression":{"id":58827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":58825,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58792,"src":"2721:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58826,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58790,"src":"2731:8:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2721:18:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":58828,"nodeType":"ExpressionStatement","src":"2721:18:84"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2445:19:84","parameters":{"id":58815,"nodeType":"ParameterList","parameters":[],"src":"2464:2:84"},"returnParameters":{"id":58816,"nodeType":"ParameterList","parameters":[],"src":"2475:0:84"},"scope":58850,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":58838,"nodeType":"FunctionDefinition","src":"2752:209:84","nodes":[],"body":{"id":58837,"nodeType":"Block","src":"2790:171:84","nodes":[],"statements":[{"expression":{"id":58835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":58833,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58792,"src":"2932:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58834,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58787,"src":"2942:12:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:22:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":58836,"nodeType":"ExpressionStatement","src":"2932:22:84"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2761:18:84","parameters":{"id":58831,"nodeType":"ParameterList","parameters":[],"src":"2779:2:84"},"returnParameters":{"id":58832,"nodeType":"ParameterList","parameters":[],"src":"2790:0:84"},"scope":58850,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":58849,"nodeType":"FunctionDefinition","src":"3140:107:84","nodes":[],"body":{"id":58848,"nodeType":"Block","src":"3204:43:84","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58844,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58792,"src":"3221:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":58845,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58790,"src":"3232:8:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3221:19:84","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":58843,"id":58847,"nodeType":"Return","src":"3214:26:84"}]},"documentation":{"id":58839,"nodeType":"StructuredDocumentation","src":"2967:168:84","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3149:23:84","parameters":{"id":58840,"nodeType":"ParameterList","parameters":[],"src":"3172:2:84"},"returnParameters":{"id":58843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58849,"src":"3198:4:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58841,"name":"bool","nodeType":"ElementaryTypeName","src":"3198:4:84","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3197:6:84"},"scope":58850,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":58784,"nodeType":"StructuredDocumentation","src":"137:750:84","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[58850],"name":"ReentrancyGuard","nameLocation":"906:15:84","scope":58851,"usedErrors":[58795]}],"license":"MIT"},"id":84}